/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    roles: Role;
    actions: Action;
    views: View;
    courses: Course;
    assignments: Assignment;
    assignmentsMedia: AssignmentsMedia;
    submissions: Submission;
    submissionsMedia: SubmissionsMedia;
    grades: Grade;
    gradesMedia: GradesMedia;
    locations: Location;
    subjects: Subject;
    sessions: Session;
    sessionsRecurrence: SessionsRecurrence;
  };
  globals: {};
}
export interface User {
  id: string;
  fullName: string;
  roles: string[] | Role[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface Role {
  id: string;
  name: string;
  iamName: string;
  views?: string[] | View[];
  actions?: string[] | Action[];
}
export interface View {
  id: string;
  name: string;
}
export interface Action {
  id: string;
  name: string;
}
export interface Course {
  id: string;
  title: string;
  startDate: string;
  endDate: string;
  location: string | Location;
  subject: string | Subject;
  members?: string[] | User[];
  createdBy: string | User;
  updatedBy: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface Location {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Subject {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Assignment {
  id: string;
  title: string;
  dueAt: string;
  content?: string;
  documents?: string[] | AssignmentsMedia[];
  submissions?: string[] | Submission[];
  grades?: string[] | Grade[];
  course: string | Course;
  createdBy: string | User;
  updatedBy: string | User;
  updatedAt: string;
  createdAt: string;
  _status?: 'draft' | 'published';
}
export interface AssignmentsMedia {
  id: string;
  createdBy: string | User;
  updatedBy: string | User;
  assignment?: string | Assignment;
  course: string | Course;
  prefix?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Submission {
  id: string;
  content?: string;
  documents?: string[] | SubmissionsMedia[];
  grade?: string | Grade;
  assignment: string | Assignment;
  course: string | Course;
  createdBy: string | User;
  updatedBy: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface SubmissionsMedia {
  id: string;
  submission?: string | Submission;
  author?: string | User;
  course: string | Course;
  assignment: string | Assignment;
  prefix?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Grade {
  id: string;
  grade: number;
  content?: string;
  documents?: string[] | GradesMedia[];
  assignment: string | Assignment;
  submission: string | Submission;
  course: string | Course;
  grader: string | User;
  updatedAt: string;
  createdAt: string;
}
export interface GradesMedia {
  id: string;
  grader: string | User;
  grade?: string | Grade;
  assignment: string | Assignment;
  submission: string | Submission;
  course: string | Course;
  prefix?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Session {
  id: string;
  course: string | Course;
  date: string;
  title: string;
  startTime: string;
  endTime: string;
  recurrenceId?: string | SessionsRecurrence;
  updatedAt: string;
  createdAt: string;
}
export interface SessionsRecurrence {
  id: string;
  title: string;
  date: string;
  startTime: string;
  endTime: string;
  isDaily: boolean;
  dailyFrequency?: number;
  isWeekly: boolean;
  weeklyFrequency?: number;
  weeklyDays?: {
    day: 'Mon' | 'Tue' | 'Wed' | 'Thu' | 'Fri' | 'Sat' | 'Sun';
    id?: string;
  }[];
  isMonthly: boolean;
  monthlyFrequency?: number;
  monthlyOnDate?: number;
  isAnnually: boolean;
  annuallyFrequency?: number;
  annuallyMonths?: {
    month?: 'Jan' | 'Feb' | 'Mar' | 'Apr' | 'May' | 'Jun' | 'Jul' | 'Aug' | 'Sep' | 'Oct' | 'Nov' | 'Dec';
    id?: string;
  }[];
  annuallyMonthsDate?: number;
  endsAfterNumberOfOccurences?: boolean;
  numberOfOccurences?: number;
  endsAfterDate?: string;
  course: string | Course;
  updatedAt: string;
  createdAt: string;
}
